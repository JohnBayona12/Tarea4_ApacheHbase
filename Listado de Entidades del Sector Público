import happybase
import pandas as pd

# Bloque principal de ejecución
try:
    # 1. Establecer conexión con HBase
    connection = happybase.Connection('localhost')
    print("Conexión establecida con HBase")

    # 2. Crear la tabla con familias de columnas
    table_name = 'sector_publico'
    families = {
        'info': dict(),       # Información básica de la entidad
        'ubicacion': dict(),  # Ubicación geográfica
        'clasificacion': dict()  # Tipo o clasificación
    }

    # Eliminar la tabla si ya existe
    if table_name.encode() in connection.tables():
        print(f"Eliminando tabla existente - {table_name}")
        connection.delete_table(table_name, disable=True)

    # Crear nueva tabla
    connection.create_table(table_name, families)
    table = connection.table(table_name)
    print("Tabla 'sector_publico' creada exitosamente")

    # 3. Cargar datos del CSV
    entidades = pd.read_csv('entidades_sector_publico.csv')  # Cambia al nombre de tu archivo

    # Iterar sobre el DataFrame usando el índice
    for index, row in entidades.iterrows():
        # Generar row key basado en el NIT
        row_key = f'entidad_{index}'.encode()

        # Organizar los datos en familias de columnas
        data = {
            b'info:nombre': str(row['NOMBRE_ENTIDAD']).encode(),
            b'info:nit': str(row['NIT_ENTIDAD']).encode(),
            
            b'ubicacion:departamento': str(row['DEPARTAMENTO']).encode(),
            b'ubicacion:municipio': str(row['MUNICIPIO']).encode(),
            
            b'clasificacion:tipo_entidad': str(row['TIPO_ENTIDAD']).encode()
        }

        table.put(row_key, data)
    
    print("Datos cargados exitosamente")

    # 4. Consultas y Análisis de Datos
    print("\n=== Entidades en la base de datos (primeras 3) ===")
    count = 0
    for key, data in table.scan():
        if count < 3:
            print(f"\nEntidad ID: {key.decode()}")
            print(f"Nombre: {data.get(b'info:nombre', b'').decode()}")
            print(f"Departamento: {data.get(b'ubicacion:departamento', b'').decode()}")
            print(f"Tipo de Entidad: {data.get(b'clasificacion:tipo_entidad', b'').decode()}")
            count += 1

    # 5. Contar entidades por departamento
    print("\n=== Número de entidades por departamento ===")
    depto_stats = {}
    for key, data in table.scan():
        depto = data.get(b'ubicacion:departamento', b'').decode()
        depto_stats[depto] = depto_stats.get(depto, 0) + 1

    for depto, count in depto_stats.items():
        print(f"{depto}: {count} entidades")

except Exception as e:
    print(f"Error: {str(e)}")
finally:
    # Cerrar la conexión
    connection.close()ii
